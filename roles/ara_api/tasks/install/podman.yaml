---
- name: Detecting existing PyPI installation
  ansible.builtin.stat:
    path: "{{ ara_api_venv_path }}"
  register: existing_pypi_install

- name: 'Notify about existing PyPI installation'
  ansible.builtin.debug:
    msg: |
      You seem to have ARA-API installed via PyPI in the past, if you like
      this role can clean up that installation and migrate your data to the Podman
      installation, by setting ara_api_migrate_to_podman to true
  when: existing_pypi_install['stat']['exists']

- name: 'Remove PyPI installation and migrate data'
  when: ara_api_migrate_to_podman
  block:
    - name: Remove PyPI virtualenv
      ansible.builtin.file:
        path: "{{ ara_api_venv_path }}"
        state: absent
      when: existing_pypi_install['stat']['exists']

    - name: Detecting existing sqlite database
      ansible.builtin.stat:
        path: "{{ ara_api_database_name }}"
      register: existing_sqlite_database

    - name: Move sqlite database to new location
      ansible.builtin.command: mv {{ ara_api_database_name }} {{ ara_api_root_dir }}/ansible.sqlite
      when:
        - existing_sqlite_database['stat']['exists']
        - ara_api_database_engine == 'django.db.backends.sqlite3'

- name: Override file locations with path in container
  ansible.builtin.set_fact:
    ara_api_database_name: "/opt/ara/ansible.sqlite"
    ara_api_log_dir: "/opt/ara/logs"
    ara_api_settings: "{{ ara_api_root_dir }}/settings.yaml"

- name: Ensure ARA API container
  containers.podman.podman_container:
    name: ara-api
    image: recordsansible/ara-api:{{ ara_api_version }}
    state: present
    auto_remove: true
    ports:
      - 127.0.0.1:8000:8000
    volume:
      - "{{ ara_api_root_dir }}:/opt/ara:z"

- name: Generate systemd service
  ansible.builtin.command: podman generate systemd --no-header --new -n ara-api
  register: ara_api_podman_service
  changed_when: false  # This task only generates input for the task below

- name: Copy service file into place
  ansible.builtin.copy:
    content: "{{ ara_api_podman_service['stdout'] }}"
    dest: /etc/systemd/system/ara-api.service
    remote_src: true
    owner: root
    group: root
    mode: '0644'

- name: Ensure service
  ansible.builtin.systemd:
    name: ara-api.service
    state: started
    daemon_reload: true
